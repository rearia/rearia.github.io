{"version":3,"sources":["webpack:///./src/components/ui/paragraph_inverse.js","webpack:///./src/components/sections/about/Team.js","webpack:///./src/pages/about.js","webpack:///./static/og/about.jpg","webpack:///./src/components/ui/img_single.js","webpack:///./src/components/ui/paragraph.js"],"names":["HeaderWrapper","styled","div","props","theme","color","grayscale","S1000","screen","md","Grid","Art","figure","Text","Caption","font_size","xsmall","ParagraphInverse","header","paragraph","children","caption","query","render","data","map","content","TEAM","name","image","role","intro","TeamGrid","lg","xs","Title","p","regular","S800","Subtitle","S700","IntroText","small","Team","id","accent","style","position","img","allFile","edges","find","node","relativePath","fluid","childImageSharp","alt","paragraphTxt1","paragraphTxt2","paragraphTxt3","AboutUs","Layout","SEO","title","desc","about","url","Navbar","text","togglecover","toggletop","About","Interview","Testing","Wip","Link2Act","Footer","module","exports","ToggleTopText","TopTextMargin","ToggleCoverText","CoverText","S900","CoverTextMargin","white","ImgCovered","ImgSingle","order","Paragraph"],"mappings":"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","file":"component---src-pages-about-js-3667a01c8b00242d967b.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Container } from '@components/global';\nimport Fade from 'react-reveal/Fade';\n\nconst ParagraphInverse = ({ header, paragraph, children, caption}) => (\n  <StaticQuery\n  query={graphql`\n    query {\n      allFile(filter: { sourceInstanceName: { eq: \"photos\" } }) {\n        edges {\n          node {\n            relativePath\n            childImageSharp {\n              fluid(maxWidth: 400, maxHeight: 400) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `}\n  render={data => (\n    <Container>\n      <h3>{header}</h3>\n      <HeaderWrapper>\n        <Fade>\n            <Grid>\n                <Art>\n                {children}\n                <Caption>{caption}</Caption>\n                </Art>\n                {paragraph.map(({ content }) => {\n                    return (\n                        <div>\n                        <Text>{content()}</Text>\n                        </div>\n                    );\n                })} \n            </Grid>\n        </Fade>\n      </HeaderWrapper>\n    </Container>\n    )}\n  />\n);\n\nParagraphInverse.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nconst HeaderWrapper = styled.div`\n  padding: 35px 0 20px 0;\n  font-weight: 400;\n  vertical-align: middle;\n  color: ${props => props.theme.color.grayscale.S1000};\n  @media (max-width: ${props => props.theme.screen.md}) {\n    max-width: 100%;\n    padding: 15px 0;\n    margin-left: 0%;\n  }\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 50px;\n  text-align: left;\n  align-items: center;\n  justify-items: left;\n\n  @media (max-width: ${props => props.theme.screen.md}) {\n    grid-template-columns: 1fr;\n    text-align: left;\n    margin-bottom: 96px;\n    grid-gap: 25px;\n\n    &:last-child {\n      margin-bottom: 24px;\n    }\n  }\n\n`;\n\nconst Art = styled.figure`\n  margin: 30px 0;\n  max-width: 1380px;\n  width: 100%;\n  img{\n    width: 100%;\n  }\n  @media (max-width: ${props => props.theme.screen.md}) {\n    order: 2;\n    margin-bottom: 0;\n  }\n`;\n\nconst Text = styled.figure`\n  margin: 18px 0;\n  @media (max-width: ${props => props.theme.screen.md}) {\n    margin: 14px 0;\n  }\n`;\n\nconst Caption = styled.div`\n  padding-top:5px;\n  padding-right: 30%;\n  ${props => props.theme.font_size.xsmall};\n`;\n\nexport default ParagraphInverse;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport { Section, Container } from '@components/global';\n\n\nconst TEAM = [\n  {\n    name: 'Ansin Lau',\n    image: 'ansin.jpg',\n    role: 'Co-founder, designer',\n    intro: 'I am an enthusiastic designer and curious social observer with a passion to make societal changes with design. I hold two bachelor degrees in Design and Sociology from Taiwan Tech & Taiwan National Universitycd . During my studies in design at Aalto University in 2017, I started to seriously work on the idea that could solve the music listening problem disturbing many of the hard of hearing people like myself.',\n  },\n  {\n    name: 'Kevin Cheng',\n    image: 'kevin.jpg',\n    role: 'Co-founder, engineer',\n    intro: 'I am immersed in the world of digital fabrication with my Physics major and Fab Diploma FabAcademy in 2016. Knowing how to make almost anything gives me power to turn any idea from zero to one. In the information age, we as  subjects are more and more transformed into digital form, transforming our consciousness. My dream is to extend human abilities to explore the physical world in the digital age.',\n  },\n];\n\nconst Team = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allFile(filter: { sourceInstanceName: { eq: \"team\" } }) {\n          edges {\n            node {\n              relativePath\n              childImageSharp {\n                fluid(maxWidth: 400, maxHeight: 400) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Section id=\"team\" accent=\"secondary\">\n        <Container style={{ position: 'relative' }}>\n          <h2>The Team</h2>\n          <TeamGrid>\n            {TEAM.map(({ name, image, role, intro }) => {\n              const img = data.allFile.edges.find(\n                ({ node }) => node.relativePath === image\n              ).node;\n\n              return (\n                <div>\n                  <Img fluid={img.childImageSharp.fluid} alt={name} />\n                  <Title>{name}</Title>\n                  <Subtitle>{role}</Subtitle>\n                  <IntroText>{intro}</IntroText>\n                </div>\n              );\n            })}\n          </TeamGrid>\n        </Container>\n      </Section>\n    )}\n  />\n);\n\nconst TeamGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 300px);\n  grid-template-rows: min-content;\n  grid-gap: 50px;\n  justify-content: space-between;\n  width: 60%;\n  margin-top: 72px;\n\n  @media (max-width: ${props => props.theme.screen.lg}) {\n    justify-content: start;\n  }\n\n  @media (max-width: ${props => props.theme.screen.md}) {\n    width: 100%;\n    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  }\n\n  @media (max-width: ${props => props.theme.screen.xs}) {\n    grid-gap: 24px;\n  }\n`;\n\nconst Title = styled.p`\n  margin-top: 26px;\n  font-weight: bold;\n  ${props => props.theme.font_size.regular};\n  color: ${props => props.theme.color.grayscale.S800};\n`;\n\nconst Subtitle = styled.p`\n  ${props => props.theme.font_size.regular};\n  color: ${props => props.theme.color.grayscale.S700};\n`;\n\nconst IntroText = styled.p`\n  ${props => props.theme.font_size.small};\n  color: ${props => props.theme.color.grayscale.S700};\n`;\n\nexport default Team;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport SEO from '@common/SEO';\n\nimport Layout from '@common/Layout';\nimport Navbar from '@common/Navbar';\nimport Link2Act from '@common/Link2Act';\nimport Footer from '@common/Footer';\n\nimport { Section } from '@components/global';\nimport ImgSingle from '@ui/img_single';\nimport Paragraph from '@ui/paragraph';\nimport ParagraphInverse from '@ui/paragraph_inverse';\nimport Team from '@sections/about/Team';\nimport SectionHeader from '@ui/sectionheader';\n\nimport about from '@static/og/about.jpg';\n\n\nconst paragraphTxt1 = [\n  {\n    content: () => ( \n      <>\n      <p>This dream was to create a device that'd let both hearing aid users and normal hearing to share the same, non-discriminating universal audio device to enjoy music with excellent sound quality.</p>\n\n      <p>Our motivation to create this device sprang from Ansin's experience as a hearing aid user — a common problem for hearing aid users is they're unable to wear earphones. That's why they need to use a device called \"streamer\".</p> \n\n\n      </>\n    ), \n  },\n];\n\nconst paragraphTxt2 = [\n  {\n    content: () => ( \n      <>\n      <p>Streamer is a intermediary between hearing aid and a audio source — such as TV or phone — transmitting the audio from source to a hearing aid.</p>\n\n      <p>The reason we wanted to re-invent the streamer is that they're not universal, they only work for specific hearing conditions.</p> \n\n      <p>Most streamers don't work in combination with normal earphones, so enjoying music with single hearing aid combined with normal earphones is impossible.</p> \n\n      <p>Another aspect is that mostly their sound quality is inferior to any earphones. There's some good quality ones — mostly made by medical device companies — but their style and design is cold and medicalized.</p>\n      </>\n    ), \n  },\n];\n\n\nconst paragraphTxt3 = [\n  {\n    content: () => ( \n      <>\n\n      <p>We wanted to create a modular earphone that'd free people to show their personality and let them enjoy its excellent sound quality — in a completely universal product. We also wanted to free it from the medicalized image, and make it like any other audio device that its users can customize and express their style.</p>\n\n      <p>Now we've been working on this project for 3 years and have come a long way. Finally our product is ready. And we call it Hai. It has achieved everything we dreamed of in our original vision.</p>\n      </>\n    ), \n  },\n];\n\n\n\nconst AboutUs = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        About: file(\n          sourceInstanceName: { eq: \"photos\" }\n          name: { eq: \"about\" }\n        ) {\n          childImageSharp {\n            fluid(maxWidth: 1450) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }, \n        Wip: file(\n          sourceInstanceName: { eq: \"photos\" }\n          name: { eq: \"wip\" }\n        ) {\n          childImageSharp {\n            fluid(maxWidth: 1450) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }, \n        Interview: file(\n          sourceInstanceName: { eq: \"photos\" }\n          name: { eq: \"interview\" }\n        ) {\n          childImageSharp {\n            fluid(maxWidth: 1450) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }, \n        Testing: file(\n          sourceInstanceName: { eq: \"photos\" }\n          name: { eq: \"testing\" }\n        ) {\n          childImageSharp {\n            fluid(maxWidth: 1450) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        },     \n      }\n    `}\n    render={data => (\n      <Layout>    \n        <SEO title=\"About | Rearia - Hearing Technology for Everyone\" desc=\"Our dream was to make a device that would be universal to most hearing conditions, deliver excellent sound quality and would not discriminate hearing aid users or medicalize their devices unnecessarily.\" img={about} url=\"https://rearia.io/about/\"/>\n        <Navbar />\n        <Section id=\"about_us\">\n          <SectionHeader \n            header=\"We are Rearia\" \n          />\n        <ImgSingle\n          header=\"Hai!\" \n          text=\"We're Ansin Lau and Kevin Cheng. We both share a deep love for music and tech. Our shared passions brought us together in 2017, when we finally decided to pursue our dream.\"\n          togglecover=\"false\"  \n          toggletop=\"true\"       \n        >\n          <Img fluid={data.About.childImageSharp.fluid} />\n        </ImgSingle>\n          <Paragraph paragraph={paragraphTxt1} caption=\"Ansin during an interview\">\n            <Img fluid={data.Interview.childImageSharp.fluid}/>\n          </Paragraph>\n          <ParagraphInverse paragraph={paragraphTxt2} caption=\"Kevin working on voiceover recording for our main video\">\n            <Img fluid={data.Testing.childImageSharp.fluid}/>\n          </ParagraphInverse>\n          <Paragraph paragraph={paragraphTxt3} caption=\"from concept to product\">\n            <Img fluid={data.Wip.childImageSharp.fluid}/>\n          </Paragraph>\n        </Section>\n        <Team/>\n        <Link2Act/>\n        <Footer />\n      </Layout>\n    )}\n  />\n);\n\nexport default AboutUs;\n","module.exports = __webpack_public_path__ + \"static/about-bcf5dc03c021223c8127bc887e86fee4.jpg\";","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Fade from 'react-reveal/Fade';\nimport { Container } from '@components/global';\n\nconst ImgSingle = ({ header, text, children, caption, toggletop, togglecover }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allFile(filter: { sourceInstanceName: { eq: \"photos\" } }) {\n          edges {\n            node {\n              relativePath\n              childImageSharp {\n                fluid(maxWidth: 400, maxHeight: 400) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Container>\n        <HeaderWrapper>\n          <ToggleTopText toggletop={toggletop}>\n            <Grid>\n              <div/>\n              <Fade>\n                <TopTextMargin>\n                  <h3>{header}</h3>\n                  <p>{text}</p>\n                </TopTextMargin>\n              </Fade>\n            </Grid>\n          </ToggleTopText>\n          <Art>\n            <ToggleCoverText togglecover={togglecover}>\n              <CoverText>\n                <Grid>\n                  <div/>\n                  <CoverTextMargin>\n                    <Fade>\n                      <h3>{header}</h3>\n                      <p>{text}</p>\n                    </Fade>\n                  </CoverTextMargin>\n                </Grid>\n              </CoverText>\n            </ToggleCoverText>\n            <ImgCovered>\n              {children}\n            </ImgCovered>\n            <Caption>{caption}</Caption>\n          </Art>\n        </HeaderWrapper>\n      </Container>\n    )}\n  />\n);\n\nImgSingle.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nconst HeaderWrapper = styled.div`\n  padding: 50px 0 50px 0;\n  font-weight: 400;\n  vertical-align: middle;\n  color: ${props => props.theme.color.grayscale.S1000};\n  @media (max-width: ${props => props.theme.screen.md}) {\n    max-width: 100%;\n    padding: 15px 0;\n    margin-left: 0%;\n  }\n  ${props =>\n    props.togglecover &&\n    `padding: ${\n      props.togglecover === 'false'\n        ? '50px 0 50px 0;'\n        : '0px 0px 0px 0px;'\n    }`};\n`;\n\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  grid-gap: 50px;\n  text-align: left;\n  align-items: top;\n  justify-items: left;\n\n  @media (max-width: ${props => props.theme.screen.md}) {\n    grid-template-columns: 1fr;\n    text-align: left;\n    margin-bottom: 96px;\n\n    &:last-child {\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nconst ToggleTopText = styled.div`\n  display: none;\n  ${props =>\n    props.toggletop &&\n    `display: ${\n      props.toggletop === 'false'\n        ? 'none'\n        : 'block'\n    }`};\n  }\n`;\n\nconst TopTextMargin = styled.div`\n  margin: 0 30% 50px 0;\n  @media (max-width: ${props => props.theme.screen.md}) {\n    margin: 0;\n  }\n`;\n\nconst ToggleCoverText = styled.div`\n  display: none;\n  ${props =>\n    props.togglecover &&\n    `display: ${\n      props.togglecover === 'false'\n        ? 'none'\n        : 'block'\n    }`};\n`;\n\nconst Art = styled.figure`\n  margin: 0;\n  max-width: 1380px;\n  width: 100%;\n  left: 0;\n  img{\n    width: 100%;\n  }\n`;\n\nconst CoverText = styled.div`\n  position: relative;\n  z-index: 2;\n  top: -70px;\n  left: 50px;\n  height: 0;\n  color:  ${props => props.theme.color.grayscale.S900};\n  @media (max-width: ${props => props.theme.screen.md}) {\n    z-index: 1;\n    top: 0px;\n    left: 0px;\n    height: auto;\n    color:  ${props => props.theme.color.grayscale.S1000};\n  }\n`;\n\nconst CoverTextMargin = styled.div`\n  margin: 0 0 0 50%;\n  padding: 20px 35px 45px 35px;\n  background-color:  ${props => props.theme.color.white.regular};\n  @media (max-width: ${props => props.theme.screen.md}) {\n    margin: 0;\n    background-color:  transparent;\n    padding: 0;\n  }\n`;\n\nconst ImgCovered = styled.div`\n  position: relative;\n  z-index: 1;\n  left: -50px;\n  width: calc(100% + 100px);\n`;\n\nconst Caption = styled.div`\n  padding-top:5px;\n  padding-right: 30%;\n  ${props => props.theme.font_size.xsmall};\n`;\n\n\nexport default ImgSingle;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Container } from '@components/global';\nimport Fade from 'react-reveal/Fade';\n\nconst Paragraph = ({ header, paragraph, children, caption}) => (\n  <StaticQuery\n  query={graphql`\n    query {\n      allFile(filter: { sourceInstanceName: { eq: \"photos\" } }) {\n        edges {\n          node {\n            relativePath\n            childImageSharp {\n              fluid(maxWidth: 400, maxHeight: 400) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `}\n  render={data => (\n    <Container>\n      <h3>{header}</h3>\n      <HeaderWrapper>\n        <Fade>\n          <Grid>\n            {paragraph.map(({ content }) => {\n              return (\n                <div>\n                  <Text>{content()}</Text>\n                </div>\n              );\n            })} \n            <Art>\n              {children}\n              <Caption>{caption}</Caption>\n            </Art>\n            </Grid>\n        </Fade>\n      </HeaderWrapper>\n    </Container>\n    )}\n  />\n);\n\nParagraph.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nconst HeaderWrapper = styled.div`\n  padding: 35px 0 20px 0;\n  font-weight: 400;\n  vertical-align: middle;\n  color: ${props => props.theme.color.grayscale.S1000};\n  @media (max-width: ${props => props.theme.screen.md}) {\n    max-width: 100%;\n    padding: 15px 0;\n    margin-left: 0%;\n  }\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 50px;\n  text-align: left;\n  align-items: center;\n  justify-items: left;\n\n  @media (max-width: ${props => props.theme.screen.md}) {\n    grid-template-columns: 1fr;\n    text-align: left;\n    margin-bottom: 96px;\n    grid-gap: 25px;\n\n    &:last-child {\n      margin-bottom: 24px;\n    }\n  }\n\n  ${props =>\n    props.order &&\n    `color: ${\n      props.accent === 'inverse'\n        ? props.theme.color.white.regular\n        : props.theme.color.grayscale.S1000\n    }`};\n`;\n\nconst Art = styled.figure`\n  margin: 30px 0;\n  max-width: 1380px;\n  width: 100%;\n  img{\n    width: 100%;\n  }\n  @media (max-width: ${props => props.theme.screen.md}) {\n    margin-bottom: 0;\n  }\n`;\n\nconst Text = styled.figure`\n  margin: 18px 0;\n  @media (max-width: ${props => props.theme.screen.md}) {\n    margin: 14px 0;\n  }\n`;\n\nconst Caption = styled.div`\n  padding-top:5px;\n  padding-right: 30%;\n  ${props => props.theme.font_size.xsmall};\n`;\n\nexport default Paragraph;\n"],"sourceRoot":""}